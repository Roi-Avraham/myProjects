<!doctype html>
<html lang="en">

<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link href="registrationScreen.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />

    <title>Registration Screen</title>
</head>

<body>

    <div class="p-3 mb-2 bg-success text-white bg-opacity-75">
        <div>
            <center>
                <h1 class="animate__animated animate__heartBeat">welcome to the Registration Screen <br></h1>
                <img src="C:\Users\hezi\Desktop\javascript\webClient3.jpg" alt="webClient" class="foo">
                <br><br>
            </center>
        </div>

        <!-- Option 1: Bootstrap Bundle with Popper -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
            crossorigin="anonymous"></script>
        <form action="loginScreen.html" class="needs-validation" novalidate>
            <div class="row mb-3">
                <label for="validationCustomUsername" class="col-sm-2 col-form-label"
                    style="font-size: large;">Username</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" id="validationCustomUsername" required>
                    <div style="color: red; font-size:large;" class="invalid-feedback">
                        Please choose a username.
                    </div>
                </div>
                <center>
                    <span style="color: red; font-size:large;" role="alert" id="nameError" aria-hidden="true"
                        class="invalid-feedback">
                        this user name is already used
                    </span>
                </center>
            </div>
            <div class="row mb-3">
                <label for="inputPassword" class="col-sm-2 col-form-label" style="font-size: large;">Password</label>
                <div class="col-sm-10">
                    <input type="password" class="form-control" id="inputPassword" name="password1"
                        pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}"
                        title="Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters"
                        required>
                    <div style="color: red; font-size:large;" class="invalid-feedback">
                        The password must contain at least one number and one uppercase and lowercase letter, and at
                        least 8 or more characters.
                    </div>
                </div>
            </div>
            <div class="row mb-3">
                <label for="verifyPassword" class="col-sm-2 col-form-label" style="font-size: large;">Verify
                    Password</label>
                <div class="col-sm-10">
                    <input type="password" class="form-control" id="verifyPassword" name="password2" required>
                    <div style="color: red; font-size:large;" class="invalid-feedback">
                        Please verify the password.
                    </div>
                </div>
            </div>
            <div class="row mb-3">
                <label for="DisplayName" class="col-sm-2 col-form-label" style="font-size: large;">Display name</label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" id="DisplayName" required>
                    <div style="color: red; font-size:large;" class="invalid-feedback">
                        Please choose a display name.
                    </div>
                </div>
            </div>
            <div class="input-group mb-3">
                <label class="input-group-text" for="image" style="font-size: large;">Upload image</label>
                <!-- <input type="file" accept ="image/*"  name="myImage" class="form-control" id="image"> -->
                <input name="image" type="file" id="fileName" accept=".jpg,.jpeg,.png" class="form-control" />
                <script type="text/javascript">
                    function validateFileType(e) {
                        var fileName = document.getElementById("fileName").value;
                        var idxDot = fileName.lastIndexOf(".") + 1;
                        var extFile = fileName.substr(idxDot, fileName.length).toLowerCase();
                        if (extFile == "jpg" || extFile == "jpeg" || extFile == "png" || fileName == "") {
                            return true;
                        } else {
                            alert("Only jpg/jpeg and png files are allowed!");
                            e.preventDefault();
                            return false;
                        }
                    }
                </script>
            </div>

            <div>
                <center>
                    <h6>Already registed? <a href="loginScreen.html">click here</a> to login</h6>
                </center>
                <br>
                <br>
            </div>
            <center> <button type="submit" id="submit" class="btn btn-primary btn-lg" value="Sign Up" 
                onclick="validDetails()">
                    Register</button>
            </center>

        </form>
    </div>

    <script>
        (function () {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }

                        form.classList.add('was-validated')
                    }, false)
                })
        })()
        var myInput = document.getElementById("inputPassword");

        var letter = document.getElementById("letter");

        var capital = document.getElementById("capital");

        var number = document.getElementById("number");

        var length = document.getElementById("length")

        myInput.onfocus = function () {

            document.getElementById("message").style.display = "block";

        }

        myInput.onblur = function () {

            document.getElementById("message").style.display = "none";

        }

        myInput.onkeyup = function () {

            var lowerCaseLetters = /[a-z]/g;

            if (myInput.value.match(lowerCaseLetters)) {

                letter.classList.remove("invalid");

                letter.classList.add("valid");

            } else {

                letter.classList.remove("valid");

                letter.classList.add("invalid");

            }

            var upperCaseLetters = /[A-Z]/g;

            if (myInput.value.match(upperCaseLetters)) {

                capital.classList.remove("invalid");

                capital.classList.add("valid");

            } else {

                capital.classList.remove("valid");

                capital.classList.add("invalid");

            }

            var numbers = /[0-9]/g;

            if (myInput.value.match(numbers)) {

                number.classList.remove("invalid");

                number.classList.add("valid");

            } else {

                number.classList.remove("valid");

                number.classList.add("invalid");

            }
            if (myInput.value.length >= 8) {

                length.classList.remove("invalid");

                length.classList.add("valid");

            } else {

                length.classList.remove("valid");

                length.classList.add("invalid");

            }
        }

        var imageRoi = new Image();
        imageRoi.src = "C:\Users\hezi\Desktop\javascript\webClient.jpg";
        var imageShira = new Image();
        imageShira.src = "C:\Users\hezi\Desktop\javascript\webClient.jpg";
        var dict = {
            "Roi Avraham": ["Rrughtcrvo90", "roi", imageRoi],
            "Shira Goran": ["Ssiragoran90", "shira", imageShira]
        };

        const submit = document.getElementById("submit");

        submit.addEventListener("click", validateUserName);
        submit.addEventListener("click", checkPassword);
        submit.addEventListener("click", validateFileType);

        function validateUserName(e) {

            const firstNameField = document.getElementById("validationCustomUsername");
            let valid = true;

            if (dict.hasOwnProperty(firstNameField.value)) {
                const nameError = document.getElementById("nameError");
                nameError.classList.add("visible");
                firstNameField.classList.add("invalid");
                nameError.setAttribute("aria-hidden", false);
                nameError.setAttribute("aria-invalid", true);
                e.preventDefault();
                return false;
            }
            return true;
        }

        function checkPassword(e) {
            const password = document.getElementById("inputPassword");
            const verifyPassword = document.getElementById("verifyPassword");
            let valid = true;

            //If Not same return False.    
            if (password.value != verifyPassword.value) {
                alert("\nPassword did not match: Please try again...")
                e.preventDefault();
                return false;
            }
            // If same return True.
            else {
                return true;
            }
        }

        function samePassword(password1, password2){
            return password1 == password2;
        }
        function isImg(image) {
            var idxDot = image.lastIndexOf(".") + 1;
            var extFile = image.substr(idxDot, fileName.length).toLowerCase();
            if (extFile == "jpg" || extFile == "jpeg" || extFile == "png" || fileName == "") {
                return true;
            } else {
                return false;
            }
        }

        function validPassword(password) {
            var lowerCaseLetters = /[a-z]/g;
            if (!password.match(lowerCaseLetters)) {
                return false;
            }
            var upperCaseLetters = /[A-Z]/g;
            if (!password.match(upperCaseLetters)) {
                return false;
            }
            var numbers = /[0-9]/g;
            if (!password.match(numbers)) {
                return false;
            }
            if (!password.length >= 8) {
                return false;
            }
            return true;
        }

        function validDetails(e) {
            const userName = document.getElementById("validationCustomUsername").value;
            const password = document.getElementById("inputPassword").value;
            const verifyPassword = document.getElementById("verifyPassword").value;
            const displayName = document.getElementById("DisplayName").value;
            const image = document.getElementById("fileName").value;
            if (userName != '' && password != '' && verifyPassword != '' && displayName != '') {
                if (validateUserName(e) && samePassword(password,verifyPassword) && isImg(image) && validPassword(password)) {
                    window.location  = 'loginScreen.html';
                }
            }
        }
    </script>
</body>
</html>
